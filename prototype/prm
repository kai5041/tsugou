#!/usr/bin/python3

from sys import argv
import os
import json
import pathlib

TSU_VERSION = "1.0.0"

class Ctx:
    def __init__(self, args):
        self.args = args
        self.settings = {
            "project_name": "",
            "project_version": "",
            "tsu_version": "",
            "template": "",
            "author": "",
            "branch": "",
            "scripts": {},
            "ignores": []
        }

    def set_setting(self, key, value):
        self.settings[key] = value

    def init(self):
        self.set_setting("project_name", os.path.basename(os.getcwd()))
        self.set_setting("tsu_version", TSU_VERSION)
        if len(self.args): self.settings["template"] = self.args[0]
        
        try:
            os.mkdir(".tsu")
        except FileExistsError:
            exit("TSU project already exists")

        os.chdir(".tsu")
        os.mkdir("commits")

        with open("config.json", "w") as f:
            json.dump(self.settings, f, indent=2)
        
        with open("history", "w") as f:
            f.write("")
        
        with open("branches", "w") as f:
            f.write("")
        
    def add(self):
        if not os.path.exists(".tsu"): exit("Not a TSU project")

        for arg in self.args:
          if os.path.isdir(arg):
              for root, dirs, files in os.walk(arg):
                dirs = [d for d in dirs if d not in self.settings["ignores"]]

                for file in files:
                    if file not in self.settings["ignores"]:
                        self.args.append(os.path.join(root, file))
                
                for directory in dirs:
                    if directory not in self.settings["ignores"]:
                        self.args.append(os.path.join(root, directory))
        
        self.args = sorted(set(self.args))

        print(self.args)


    def run(self):
        pass

    def version(self):
        global TSU_VERSION
        print(f"TSU version {TSU_VERSION}")
        print(f"Github: https://github.com/kai5041/tsu")

commands = {
    "init": Ctx.init,
    "add": Ctx.add,
    "run": Ctx.run,
    "version": Ctx.version
}


def main():
    if len(argv) < 2:
        print("Enter 'tsu help' for further instructions")
        return

    command = argv[1]
    
    if command not in commands: exit(f"Command '{command}' not found")
    
    ctx = Ctx(argv[2:])
    commands[command](ctx)

if __name__ == "__main__":
    main()
